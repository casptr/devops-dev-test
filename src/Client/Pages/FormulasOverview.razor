@page "/formules"
@inject HttpClient http

<h3 class="pa-3 ma-3">Formules</h3>

<MudSimpleTable Style="overflow-x: auto;" Bordered="true" Class="ma-6">
   
    <tbody>
        <tr>
            <td style ="text-align:center"><b>Vergelijk formules</b></td>
            @if (formulas != null)
            {
                @foreach (var f in formulas)
                {
                    <td style="text-align:center">
                        <b>@f.Name</b>
                        <p>
                            @f.Description
                        </p>

                        <MudImage Src="@f.ImageUrl" Width="200" Height="150" Alt="@f.Name" Elevation="25" Class="rounded-lg ma-4" />
                        
                       
                    </td>
                }
            }
           
        </tr>
        @if (supplements!=null)
        {
            @foreach (var s in supplements)
            {
                <tr>
                    <td style="text-align:center"><b>@s.Name</b></td>
                    @if (formulas != null)
                    {
                        @foreach (var f in formulas)
                        {
                            @if (f.IncludedSupplements != null)
                            {
                                @if (f.IncludedSupplements.Contains(s))
                                {
                                    <td style="text-align:center">
                                        <MudIcon Icon="@Icons.Material.Filled.CheckCircle" Color="Color.Success"  />
                                    </td>
                                }
                                else
                                {
                                    <td></td>
                                }
                            }
                            
                        }
                    }
                   
                   
                </tr>
            }
        }
      
    </tbody>
</MudSimpleTable>

@code {
    private Formula[]? formulas;
    private Supplement[]? supplements;
    protected override async Task OnInitializedAsync()
    {
        formulas = await http.GetFromJsonAsync<Formula[]>
        (
            "Sample-data/FormulaData.json"                          
        );
        supplements = await http.GetFromJsonAsync<Supplement[]>
       (
           "Sample-data/SupplementData.json"
       );
    }

    public class Formula
    {
        public string Name { get; set; }
        public string Description { get; set; }
        public double Price { get; set; }
        public string? ImageUrl { get; set; }
        public IEnumerable<Supplement>? IncludedSupplements  { get; set; }
    }

    public class Supplement
    {
        public string Name { get; set; }

        public override bool Equals(object obj)
        {
            return Name.ToString() == obj.ToString();
        }
        public override string ToString()
        {
            return Name.ToString();
        }
    }
}




